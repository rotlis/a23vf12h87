[
  {
    "id": "e435e9c0.3563f8",
    "type": "udp out",
    "z": "52ecbb1f.978604",
    "name": "",
    "addr": "",
    "iface": "",
    "port": "",
    "ipv": "udp4",
    "outport": "",
    "base64": false,
    "multicast": "false",
    "x": 569,
    "y": 421,
    "wires": []
  },
  {
    "id": "e66f6983.72cef8",
    "type": "function",
    "z": "52ecbb1f.978604",
    "name": "optimiseMessage",
    "func": "msg.ip=msg.payload.ip;\nmsg.port=msg.payload.port;\n//msg.colorCode=msg.payload.colorCode;\n\nvar tickleMessage = {\n    'ip':msg.payload.ip, \n    'port':msg.payload.port,\n    'payload':msg.payload.colorCode\n};\nnode.send(tickleMessage);\nreturn null;",
    "outputs": 1,
    "noerr": 0,
    "x": 152,
    "y": 421,
    "wires": [
      [
        "e435e9c0.3563f8"
      ]
    ]
  },
  {
    "id": "6f0a6ea4.67878",
    "type": "http request",
    "z": "52ecbb1f.978604",
    "name": "Request to get build status",
    "method": "GET",
    "ret": "txt",
    "url": "https://go.nbnco.net.au/go/cctray.xml",
    "tls": "dd4f2fbe.d4511",
    "x": 499,
    "y": 180,
    "wires": [
      [
        "b773fb00.6a71c8"
      ]
    ]
  },
  {
    "id": "1573accd.fb5aa3",
    "type": "inject",
    "z": "52ecbb1f.978604",
    "name": "Trigger for build status request",
    "topic": "",
    "payload": "true",
    "payloadType": "bool",
    "repeat": "3600",
    "crontab": "",
    "once": false,
    "x": 216,
    "y": 61,
    "wires": [
      [
        "20a1a4cb.1f1ccc"
      ]
    ]
  },
  {
    "id": "afb8cf7e.aa8cd",
    "type": "split",
    "z": "52ecbb1f.978604",
    "name": "",
    "splt": "\\n",
    "x": 568.5,
    "y": 300,
    "wires": [
      [
        "e66f6983.72cef8"
      ]
    ]
  },
  {
    "id": "b773fb00.6a71c8",
    "type": "xml",
    "z": "52ecbb1f.978604",
    "name": "",
    "attr": "",
    "chr": "",
    "x": 111,
    "y": 300,
    "wires": [
      [
        "38b33aa1.991496"
      ]
    ]
  },
  {
    "id": "38b33aa1.991496",
    "type": "function",
    "z": "52ecbb1f.978604",
    "name": "buildServerResponseParser",
    "func": "var isNull = function(obj) {\n\treturn (obj === null || obj === undefined || obj === \"\");\n};\n\nif (isNull(msg) || isNull(msg.payload) || isNull(msg.payload.Projects) || isNull(msg.payload.Projects.Project)) {\n\treturn [];\n}\n\nvar getBuildLightColor = function(pipelineToMonitor) {\n\tvar color=\"\";\n\tfor(var i=0; i<msg.payload.Projects.Project.length; i++) {\n\t\tvar project = msg.payload.Projects.Project[i];\n\t\tvar pipelineName = project.$.name;\n\t\tif (pipelineName.indexOf(pipelineToMonitor) === 0) {\n\t\t    if (project.$.activity === \"Building\") {\n\t\t\t\tcolor = \"blue\";\n\t\t\t\tbreak;\n\t\t\t} else if (project.$.activity === \"Sleeping\" && project.$.lastBuildStatus === \"Failure\") {\n\t\t\t\tcolor = \"red\";\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tcolor = \"green\";\n\t\t\t}\n\t\t}\n\t}\n\treturn color;\n}\n\nvar payload = [];\nfor(var mac in msg.devices) {\n\tvar device = msg.devices[mac];\n\tvar colorCode = getBuildLightColor(device.pipeline);\n\tpayload.push(\n\t\t\t{\n\t\t\t\t\"ip\": device.ip,\n\t\t\t\t\"port\": device.port,\n\t\t\t\t\"colorCode\": colorCode\n\t\t\t}\n\t);\n}\n\nmsg.payload = payload;\n// [\n//         {\"ip\": \"127.0.0.1\", \"port\": 49903, \"colorCode\": \"green\"},\n//         {\"ip\": \"127.0.0.1\", \"port\": 49904, \"colorCode\": \"red\"}\n//     ];\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 340.5,
    "y": 300,
    "wires": [
      [
        "afb8cf7e.aa8cd"
      ]
    ]
  },
  {
    "id": "20a1a4cb.1f1ccc",
    "type": "http request",
    "z": "52ecbb1f.978604",
    "name": "",
    "method": "GET",
    "ret": "obj",
    "url": "http://127.0.0.1:1880/devices",
    "tls": "",
    "x": 548.5,
    "y": 61,
    "wires": [
      [
        "2b15e579.51423a"
      ]
    ]
  },
  {
    "id": "2b15e579.51423a",
    "type": "change",
    "z": "52ecbb1f.978604",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "devices",
        "pt": "msg",
        "to": "payload",
        "tot": "msg"
      },
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "",
        "tot": "str"
      },
      {
        "t": "delete",
        "p": "headers",
        "pt": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 141.5,
    "y": 180,
    "wires": [
      [
        "6f0a6ea4.67878"
      ]
    ]
  },
  {
    "id": "dd4f2fbe.d4511",
    "type": "tls-config",
    "z": "52ecbb1f.978604",
    "name": "",
    "cert": "./certificates/certificate.pem",
    "key": "./certificates/privatekey.pem",
    "ca": "",
    "verifyservercert": false
  }
]