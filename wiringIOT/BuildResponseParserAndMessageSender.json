[
  {
    "id": "9081e4d9.cf6048",
    "type": "udp out",
    "z": "d91bc63f.83aaa8",
    "name": "",
    "addr": "",
    "iface": "",
    "port": "",
    "ipv": "udp4",
    "outport": "",
    "base64": false,
    "multicast": "false",
    "x": 616,
    "y": 298,
    "wires": []
  },
  {
    "id": "3b566f89.6b52c",
    "type": "json",
    "z": "d91bc63f.83aaa8",
    "name": "",
    "x": 411.5,
    "y": 298,
    "wires": [
      [
        "9081e4d9.cf6048"
      ]
    ]
  },
  {
    "id": "1f88af0c.434f41",
    "type": "function",
    "z": "d91bc63f.83aaa8",
    "name": "optimiseMessage",
    "func": "msg.ip=msg.payload.ip;\nmsg.port=msg.payload.port;\n//msg.colorCode=msg.payload.colorCode;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 166,
    "y": 298,
    "wires": [
      [
        "3b566f89.6b52c"
      ]
    ]
  },
  {
    "id": "314606e3.3b03ca",
    "type": "http request",
    "z": "d91bc63f.83aaa8",
    "name": "Request to get build status",
    "method": "GET",
    "ret": "txt",
    "url": "https://go.nbnco.net.au/go/cctray.xml",
    "tls": "7514166d.ede098",
    "x": 547,
    "y": 60,
    "wires": [
      [
        "66db5e87.b60c6"
      ]
    ]
  },
  {
    "id": "68394a54.c520d4",
    "type": "inject",
    "z": "d91bc63f.83aaa8",
    "name": "Trigger for build status request",
    "topic": "",
    "payload": "true",
    "payloadType": "bool",
    "repeat": "3600",
    "crontab": "",
    "once": false,
    "x": 202,
    "y": 60,
    "wires": [
      [
        "314606e3.3b03ca"
      ]
    ]
  },
  {
    "id": "1e1b8e50.9a5f12",
    "type": "debug",
    "z": "d91bc63f.83aaa8",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "true",
    "x": 589,
    "y": 403,
    "wires": []
  },
  {
    "id": "4dc6e858.7161e8",
    "type": "json",
    "z": "d91bc63f.83aaa8",
    "name": "",
    "x": 370,
    "y": 403,
    "wires": [
      [
        "1e1b8e50.9a5f12"
      ]
    ]
  },
  {
    "id": "6560129b.59e26c",
    "type": "udp in",
    "z": "d91bc63f.83aaa8",
    "name": "",
    "iface": "",
    "port": "49903",
    "ipv": "udp4",
    "multicast": "false",
    "group": "",
    "datatype": "utf8",
    "x": 135,
    "y": 403,
    "wires": [
      [
        "4dc6e858.7161e8"
      ]
    ]
  },
  {
    "id": "ab78e33a.ea568",
    "type": "debug",
    "z": "d91bc63f.83aaa8",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "true",
    "x": 590,
    "y": 484,
    "wires": []
  },
  {
    "id": "de359d.a333ba6",
    "type": "json",
    "z": "d91bc63f.83aaa8",
    "name": "",
    "x": 373,
    "y": 484,
    "wires": [
      [
        "ab78e33a.ea568"
      ]
    ]
  },
  {
    "id": "b7294f46.4aca2",
    "type": "udp in",
    "z": "d91bc63f.83aaa8",
    "name": "",
    "iface": "",
    "port": "49904",
    "ipv": "udp4",
    "multicast": "false",
    "group": "",
    "datatype": "utf8",
    "x": 136,
    "y": 484,
    "wires": [
      [
        "de359d.a333ba6"
      ]
    ]
  },
  {
    "id": "2c0adf6b.a5e0b",
    "type": "split",
    "z": "d91bc63f.83aaa8",
    "name": "",
    "splt": "\\n",
    "x": 616.5,
    "y": 181,
    "wires": [
      [
        "1f88af0c.434f41"
      ]
    ]
  },
  {
    "id": "66db5e87.b60c6",
    "type": "xml",
    "z": "d91bc63f.83aaa8",
    "name": "",
    "attr": "",
    "chr": "",
    "x": 129,
    "y": 181,
    "wires": [
      [
        "d98bedec.985d1"
      ]
    ]
  },
  {
    "id": "d98bedec.985d1",
    "type": "function",
    "z": "d91bc63f.83aaa8",
    "name": "buildServerResponseParser",
    "func": "var isNull = function(obj) {\n    return (obj === null || obj === undefined || obj === \"\");\n};\n\nif (isNull(msg) || isNull(msg.payload) || isNull(msg.payload.Projects) || isNull(msg.payload.Projects.Project)) {\n    return [];\n}\n\n// TODO get pipeline names, ipAddresses and portNumbers from DB\nvar pipelineNames = [\"OnlineCustomers\", \"Dev1-PodBAU\"];\nvar ipAddresses = [\"127.0.0.1\", \"127.0.0.1\"];\nvar portNumbers = [49903, 49904];\nvar index = 0;\n\nvar payload = [];\npipelineNames.forEach(function(pipelineToMonitor) {\n    var buildLightColor = \"green\";\n    msg.payload.Projects.Project.forEach(function(project) {\n        var pipelineName = project.$.name;\n        if (pipelineName.indexOf(pipelineToMonitor) === 0) {\n            if (buildLightColor === \"green\") { //TODO remove this green check if and add the break in the below if statements\n                if (project.$.activity === \"Building\") {\n                    buildLightColor = \"blue\";\n                } else if (project.$.activity === \"Sleeping\" && project.$.lastBuildStatus === \"Failure\") {\n                    buildLightColor = \"red\";\n                }\n            }\n        }\n    });\n    payload.push(\n        {\"ip\": ipAddresses[index], \"port\": portNumbers[index], \"colorCode\": buildLightColor}\n    );\n    index++;\n});\n\nmsg.payload = payload;\n// [\n//         {\"ip\": \"127.0.0.1\", \"port\": 49903, \"colorCode\": \"green\"},\n//         {\"ip\": \"127.0.0.1\", \"port\": 49904, \"colorCode\": \"red\"}\n//     ];\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 375.5,
    "y": 181,
    "wires": [
      [
        "2c0adf6b.a5e0b"
      ]
    ]
  },
  {
    "id": "7514166d.ede098",
    "type": "tls-config",
    "z": "d91bc63f.83aaa8",
    "name": "",
    "cert": "/Users/muhammadfaisal/Downloads/NBN_Certificates 2/NBN Co Medium Assurance Intermediate CA.pem",
    "key": "/Users/muhammadfaisal/Downloads/privatekey.pem",
    "ca": "",
    "verifyservercert": false
  }
]