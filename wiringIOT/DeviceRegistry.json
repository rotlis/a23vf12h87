[
  {
    "id": "859778e.645e188",
    "type": "udp in",
    "z": "152d639d.7d86fc",
    "name": "",
    "iface": "",
    "port": "9001",
    "ipv": "udp4",
    "multicast": "false",
    "group": "",
    "datatype": "utf8",
    "x": 148,
    "y": 100,
    "wires": [
      [
        "f1b8c233.7c40f"
      ]
    ]
  },
  {
    "id": "49ca179d.b33b78",
    "type": "function",
    "z": "152d639d.7d86fc",
    "name": "prepare entry",
    "func": "\nvar isNull = function(obj) {\n\treturn (obj === null || obj === undefined || obj === \"\");\n};\n\nvar macInfo = msg.macInfo;\nvar mac = macInfo.substring(0, macInfo.indexOf(':'));\nvar pipeline = '';\n\nvar devices = null;\nif (!isNull(msg.devices) && !isNull(msg.devices.devices)) {\n    devices = msg.devices.devices;\n}\n\nif (!isNull(devices) && !isNull(devices[mac]) && !isNull(devices[mac].pipeline)) {\n\tpipeline = devices[mac].pipeline;\n}\n\nmsg.payload = {\n    'mac':mac,\n    'ip':msg.ip,\n    'port':msg.port,\n    'pipeline':pipeline,\n    'lastMessage':msg.payload.substring(macInfo.indexOf(':')+1),\n    'lastSeen':new Date()\n};\nmsg.datapath = '/devices/' + mac;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 472,
    "y": 240,
    "wires": [
      [
        "7ab9baaa.f85994",
        "e908606f.be491"
      ]
    ]
  },
  {
    "id": "7ab9baaa.f85994",
    "type": "DataIn",
    "z": "152d639d.7d86fc",
    "collection": "423e0637.550f08",
    "name": "save DB",
    "update": false,
    "path": "/",
    "x": 747,
    "y": 300,
    "wires": []
  },
  {
    "id": "37a8de08.50ac62",
    "type": "http in",
    "z": "152d639d.7d86fc",
    "name": "",
    "url": "/devices",
    "method": "get",
    "swaggerDoc": "",
    "x": 159,
    "y": 495,
    "wires": [
      [
        "ec5e71f.c3a119"
      ]
    ]
  },
  {
    "id": "ec5e71f.c3a119",
    "type": "DataOut",
    "z": "152d639d.7d86fc",
    "collection": "423e0637.550f08",
    "name": "load DB",
    "path": "/",
    "error": false,
    "x": 367,
    "y": 495,
    "wires": [
      [
        "2d624c96.e0fef4"
      ]
    ]
  },
  {
    "id": "2d624c96.e0fef4",
    "type": "function",
    "z": "152d639d.7d86fc",
    "name": "HTTP headers",
    "func": "msg.headers={'Content-type':'application/json'}\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 568,
    "y": 495,
    "wires": [
      [
        "e2bd5972.227298"
      ]
    ]
  },
  {
    "id": "e2bd5972.227298",
    "type": "http response",
    "z": "152d639d.7d86fc",
    "name": "",
    "x": 757,
    "y": 495,
    "wires": []
  },
  {
    "id": "41402557.91666c",
    "type": "comment",
    "z": "152d639d.7d86fc",
    "name": "Process UDP beakon from device",
    "info": "",
    "x": 161,
    "y": 44,
    "wires": []
  },
  {
    "id": "51588c2e.51e2b4",
    "type": "comment",
    "z": "152d639d.7d86fc",
    "name": "REST GET all devices",
    "info": "",
    "x": 121,
    "y": 445,
    "wires": []
  },
  {
    "id": "ac29613d.4d9c5",
    "type": "comment",
    "z": "152d639d.7d86fc",
    "name": "Clear DB",
    "info": "",
    "x": 81,
    "y": 566,
    "wires": []
  },
  {
    "id": "84466a5b.e9d998",
    "type": "inject",
    "z": "152d639d.7d86fc",
    "name": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 174,
    "y": 615,
    "wires": [
      [
        "ebb5e52b.0c1488"
      ]
    ]
  },
  {
    "id": "a9a29bb0.6ddcc8",
    "type": "DataIn",
    "z": "152d639d.7d86fc",
    "collection": "423e0637.550f08",
    "name": "save DB",
    "update": false,
    "path": "/",
    "x": 747,
    "y": 615,
    "wires": []
  },
  {
    "id": "ebb5e52b.0c1488",
    "type": "function",
    "z": "152d639d.7d86fc",
    "name": "empty payload",
    "func": "msg.payload={};\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 449,
    "y": 615,
    "wires": [
      [
        "a9a29bb0.6ddcc8"
      ]
    ]
  },
  {
    "id": "92522118.3979b",
    "type": "comment",
    "z": "152d639d.7d86fc",
    "name": "Send 'tickle' UDP to all devices",
    "info": "",
    "x": 145,
    "y": 696,
    "wires": []
  },
  {
    "id": "730f0796.df2b18",
    "type": "inject",
    "z": "152d639d.7d86fc",
    "name": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 174,
    "y": 737,
    "wires": [
      [
        "daf8e80b.348988"
      ]
    ]
  },
  {
    "id": "daf8e80b.348988",
    "type": "DataOut",
    "z": "152d639d.7d86fc",
    "collection": "423e0637.550f08",
    "name": "load DB",
    "path": "/",
    "error": false,
    "x": 329,
    "y": 737,
    "wires": [
      [
        "6cf16f43.7bb03"
      ]
    ]
  },
  {
    "id": "aa60a585.b45918",
    "type": "udp out",
    "z": "152d639d.7d86fc",
    "name": "",
    "addr": "",
    "iface": "",
    "port": "",
    "ipv": "udp4",
    "outport": "",
    "base64": false,
    "multicast": "false",
    "x": 680,
    "y": 806,
    "wires": []
  },
  {
    "id": "6cf16f43.7bb03",
    "type": "function",
    "z": "152d639d.7d86fc",
    "name": "iterate through all device and send them black color",
    "func": "for(var mac in msg.payload){\n    var dev = msg.payload[mac];\n    var tickleMessage = {\n        'ip':dev.ip, \n        'port':dev.port,\n        'payload':'black'\n    };\n    node.send(tickleMessage);\n}\n// drop original message\nreturn null;",
    "outputs": 1,
    "noerr": 0,
    "x": 629,
    "y": 737,
    "wires": [
      [
        "aa60a585.b45918"
      ]
    ]
  },
  {
    "id": "a70845be.9920e8",
    "type": "http in",
    "z": "152d639d.7d86fc",
    "name": "Assign pipeline to Device",
    "url": "/devices",
    "method": "post",
    "swaggerDoc": "",
    "x": 198,
    "y": 371,
    "wires": [
      [
        "4802e8dc.18d3b8"
      ]
    ]
  },
  {
    "id": "658e1e10.2a17b",
    "type": "DataIn",
    "z": "152d639d.7d86fc",
    "collection": "423e0637.550f08",
    "name": "save DB",
    "update": false,
    "path": "/",
    "x": 747,
    "y": 371,
    "wires": []
  },
  {
    "id": "4802e8dc.18d3b8",
    "type": "function",
    "z": "152d639d.7d86fc",
    "name": "prepare entry",
    "func": "msg.datapath = '/devices/' + msg.payload.mac + '/pipeline';\nmsg.payload = msg.payload.pipelineName;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 472,
    "y": 371,
    "wires": [
      [
        "658e1e10.2a17b"
      ]
    ]
  },
  {
    "id": "c0fc7445.7244c8",
    "type": "change",
    "z": "152d639d.7d86fc",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "devices",
        "pt": "msg",
        "to": "payload",
        "tot": "msg"
      },
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "",
        "tot": "str"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 169.5,
    "y": 240,
    "wires": [
      [
        "49ca179d.b33b78"
      ]
    ]
  },
  {
    "id": "acd1a4eb.a36a28",
    "type": "DataOut",
    "z": "152d639d.7d86fc",
    "collection": "423e0637.550f08",
    "name": "Get devices",
    "path": "/",
    "error": false,
    "x": 738,
    "y": 100,
    "wires": [
      [
        "c0fc7445.7244c8"
      ]
    ]
  },
  {
    "id": "f1b8c233.7c40f",
    "type": "change",
    "z": "152d639d.7d86fc",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "macInfo",
        "pt": "msg",
        "to": "payload",
        "tot": "msg"
      },
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "",
        "tot": "str"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 427,
    "y": 100,
    "wires": [
      [
        "acd1a4eb.a36a28"
      ]
    ]
  },
  {
    "id": "e908606f.be491",
    "type": "websocket out",
    "z": "152d639d.7d86fc",
    "name": "/ws/test out",
    "server": "f0504b7f.120998",
    "client": "",
    "x": 737,
    "y": 179,
    "wires": []
  },
  {
    "id": "423e0637.550f08",
    "type": "json-db-collection",
    "z": "152d639d.7d86fc",
    "name": "bbl",
    "collection": "devices",
    "save": true
  },
  {
    "id": "f0504b7f.120998",
    "type": "websocket-listener",
    "z": "152d639d.7d86fc",
    "path": "/ws/test",
    "wholemsg": "false"
  }
]